jshell

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

.stream
.filter
.map
.foreach
.reduce
.distinct
 number.stream().distinct().forEach(System.out::println)
.sorted
 number.stream().sorted().forEach(System.out::println)

Comparator
number.stream().sorted(Comparator.naturalOrder()).forEach(System.out::println)
number.stream().sorted(Comparator.reverseOrder()).forEach(System.out::println)
custom : 
 courses.stream().sorted(Comparator.comparing(a -> a.length())).forEach(System.out::println)
collector

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Predicate < predicate (boolean-valued function) of one argument >
 - filter
Function < accepts one argument and produces a result >
 - map
Consumer < operation that accepts a single input argument and returns no result >
 - forEach
 
 
 - is functional interface
 - has only one abstract method - this is function descriptor
 - other will be default or static
 
BinaryOperator : accept 2 input of same type and return single output of same type
 - reduce
 

UnaryOperator : accept 1 input of same type and return single output of same type
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Behavior of parameterization
- passing algorithm, strategy as a parameter
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Supplier 
- no  input - return something

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
BiFunction
BiPredicate
BiConsumer

